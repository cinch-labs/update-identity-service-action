name: 'Pull Request'

on:
  pull_request:

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@cinch-labs'

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GHP_TOKEN }}

      - name: Lint
        run: yarn lint:check

      - name: Prettier Check
        run: yarn prettier:check

      - name: Compile TypeScript
        run: yarn build

      - name: Package action
        run: yarn package

      - name: Unit tests
        run: yarn test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      TEST_INFIX: sheepdog-${{ github.run_number }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@cinch-labs'

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GHP_TOKEN }}

      - name: Build
        run: yarn build && yarn package

      - name: Adding an infix
        uses: ./
        with:
          auth-authority: ${{ secrets.AUTH_AUTHORITY }}
          access-key: ${{ secrets.ACCESS_KEY }}
          subdomain-infix: ${{ env.TEST_INFIX }}

      - name: Removing an infix
        uses: ./
        with:
          auth-authority: ${{ secrets.AUTH_AUTHORITY }}
          access-key: ${{ secrets.ACCESS_KEY }}
          subdomain-infix: ${{ env.TEST_INFIX }}
          update-type: remove
